
SET(SWIG_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/ettercap_lua_swig.c")
SET(SWIG_HEADER_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/lua_swig.h")

SET(SWIG_INCLUDE_ARGS)
FOREACH(it ${EC_INCLUDE} ${EC_INCLUDE_PATH} ${CMAKE_INCLUDE_PATH})
  SET(SWIG_INCLUDE_ARGS ${SWIG_INCLUDE_ARGS} "-I${it}")
ENDFOREACH(it)

# Generates the lua SWIG bindings.
ADD_CUSTOM_COMMAND(
  OUTPUT ${SWIG_OUTPUT}
  COMMAND ${CMAKE_COMMAND} -E echo_append "Creating wrapper code for lua..."
  COMMAND ${SWIG_EXECUTABLE} -lua -o ${SWIG_OUTPUT} ${SWIG_INCLUDE_ARGS} ${SWIG_INPUT}
  COMMAND ${CMAKE_COMMAND} -E echo "Done."
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/../*.i
  )

# Generates the lua SWIG bindings.
ADD_CUSTOM_COMMAND(
  OUTPUT ${SWIG_HEADER_OUTPUT}
  COMMAND ${CMAKE_COMMAND} -E echo_append "Creating swig header code for lua..."
  COMMAND ${SWIG_EXECUTABLE} -lua -external-runtime ${SWIG_HEADER_OUTPUT}
  COMMAND ${CMAKE_COMMAND} -E echo "Done."
  WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
  )

INCLUDE_DIRECTORIES(${LUA_INCLUDE_DIR} ${CMAKE_CURRENT_BINARY_DIR})

add_library(dynamic_lua MODULE lua.c ${SWIG_OUTPUT} ${SWIG_HEADER_OUTPUT})

target_link_libraries(dynamic_lua ${LUA_LIBRARIES} ettercap)
set_target_properties(dynamic_lua PROPERTIES PREFIX "ec_")

install(TARGETS
          dynamic_lua 
        LIBRARY DESTINATION ${INSTALL_LIBDIR}/ettercap/
        PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE
                    GROUP_READ GROUP_EXECUTE
                    WORLD_READ WORLD_EXECUTE)
